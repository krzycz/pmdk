language: c

before_install:
  - test "$TRAVIS_BRANCH" != "coverity_scan" -o "$COVERITY" == "1" || exit 0
  - test "$TRAVIS_BRANCH" == "coverity_scan" -o "$COVERITY" != "1" || exit 0
  - if [[ "$TRAVIS_BRANCH" == "coverity_scan" ]]; then
      echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
    else
      export HOST_WORKDIR=`pwd` &&
      cd utils/docker &&
      ./prepare-environment.sh &&
      ./pull-or-rebuild-image.sh;
    fi
  - if [[ -f push_image_to_repo_flag ]]; then PUSH_THE_IMAGE=1; fi
  - rm -f push_image_to_repo_flag;

script:
  - test "$TRAVIS_BRANCH" == "coverity_scan" -o "$COVERITY" == "1" || ./build.sh

env:
  matrix:
    - MAKE_PKG=0 EXTRA_CFLAGS=-DUSE_VALGRIND REMOTE_TESTS=1 CC=gcc OS=ubuntu OS_VER=16.04
    - MAKE_PKG=0 EXTRA_CFLAGS=-DUSE_VALGRIND REMOTE_TESTS=1 CC=clang OS=ubuntu OS_VER=16.04
    - MAKE_PKG=0 EXTRA_CFLAGS=-DUSE_VALGRIND REMOTE_TESTS=1 CC=clang OS=fedora OS_VER=23
    - MAKE_PKG=1 CC=gcc OS=ubuntu OS_VER=16.04 EXPERIMENTAL=y
    - MAKE_PKG=1 CC=clang OS=ubuntu OS_VER=16.04 EXPERIMENTAL=y
    - MAKE_PKG=1 CC=gcc OS=fedora OS_VER=23 EXPERIMENTAL=y
    - COVERITY=1

  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "U5w9sWnt+bNCEvsISbU4TPLabsO09RmwC2TeiJM5EorbdZVkSW+u74lJukX0qg5317F6V3bXw4DBKCeb2sDRItxcLUvEpih9dbeKVRPWTDfcmNghK5CH/+5vtyhOIMkYTS9Ov9Vm0E0lUVgiYf/vtV/Vq5QUU0wSk53X9uMWzJ4="

after_success:
  - if [[ $PUSH_THE_IMAGE -eq 1 ]]; then images/push-image.sh $OS:$OS_VER; fi

addons:
  coverity_scan:
    project:
      name: "krzycz/nvml"
      description: "NVM Library"
    notification_email: krzysztof.czurylo@intel.com
    build_command: "make -j all"
    branch_pattern: coverity_scan
